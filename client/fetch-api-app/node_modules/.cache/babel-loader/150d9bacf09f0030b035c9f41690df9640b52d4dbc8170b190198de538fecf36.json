{"ast":null,"code":"var _jsxFileName = \"/Users/dylanparker/Downloads/DylanParkerSeniorCapstone/client/fetch-api-app/src/TeamInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TeamInfo.css'; // optional styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst leagueEndpoints = {\n  'NFL': 'football/nfl',\n  'College Football': 'football/college-football',\n  'NBA': 'basketball/nba',\n  'Men\\'s College Basketball': 'basketball/mens-college-basketball',\n  'Women\\'s College Basketball': 'basketball/womens-college-basketball',\n  'MLB': 'baseball/mlb',\n  'NHL': 'hockey/nhl'\n};\nfunction TeamInfo() {\n  _s();\n  var _selectedTeam$logos, _selectedTeam$logos$;\n  const [selectedLeague, setSelectedLeague] = useState('');\n  const [teams, setTeams] = useState([]);\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (selectedLeague) {\n      const fetchTeams = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n          const endpoint = `http://site.api.espn.com/apis/site/v2/sports/${leagueEndpoints[selectedLeague]}/teams`;\n          const response = await fetch(endpoint);\n          if (!response.ok) {\n            throw new Error('Failed to fetch teams');\n          }\n          const data = await response.json();\n          setTeams(data.sports[0].leagues[0].teams);\n          setSelectedTeam(null);\n        } catch (err) {\n          setError('Error fetching teams. Please try again later.');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchTeams();\n    }\n  }, [selectedLeague]);\n  const handleTeamClick = team => {\n    setSelectedTeam(team.team);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Team Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedLeague(e.target.value),\n      value: selectedLeague,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a League\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), Object.keys(leagueEndpoints).map(league => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: league,\n        children: league\n      }, league, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), teams.length > 0 && !loading && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"team-list\",\n      children: teams.map(teamData => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleTeamClick(teamData),\n        children: teamData.team.displayName\n      }, teamData.team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), selectedTeam && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedTeam.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_selectedTeam$logos = selectedTeam.logos) === null || _selectedTeam$logos === void 0 ? void 0 : (_selectedTeam$logos$ = _selectedTeam$logos[0]) === null || _selectedTeam$logos$ === void 0 ? void 0 : _selectedTeam$logos$.href,\n        alt: selectedTeam.name,\n        style: {\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this), \" \", selectedTeam.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }, this), \" \", selectedTeam.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Abbreviation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }, this), \" \", selectedTeam.abbreviation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamInfo, \"2oVK1eVzp6q2Mte2WjdaPpk5Oh8=\");\n_c = TeamInfo;\nexport default TeamInfo;\nvar _c;\n$RefreshReg$(_c, \"TeamInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","leagueEndpoints","TeamInfo","_s","_selectedTeam$logos","_selectedTeam$logos$","selectedLeague","setSelectedLeague","teams","setTeams","selectedTeam","setSelectedTeam","loading","setLoading","error","setError","fetchTeams","endpoint","response","fetch","ok","Error","data","json","sports","leagues","err","handleTeamClick","team","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","Object","keys","map","league","length","teamData","onClick","displayName","id","src","logos","href","alt","name","style","width","location","abbreviation","_c","$RefreshReg$"],"sources":["/Users/dylanparker/Downloads/DylanParkerSeniorCapstone/client/fetch-api-app/src/TeamInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TeamInfo.css'; // optional styling\n\nconst leagueEndpoints = {\n  'NFL': 'football/nfl',\n  'College Football': 'football/college-football',\n  'NBA': 'basketball/nba',\n  'Men\\'s College Basketball': 'basketball/mens-college-basketball',\n  'Women\\'s College Basketball': 'basketball/womens-college-basketball',\n  'MLB': 'baseball/mlb',\n  'NHL': 'hockey/nhl',\n};\n\nfunction TeamInfo() {\n  const [selectedLeague, setSelectedLeague] = useState('');\n  const [teams, setTeams] = useState([]);\n  const [selectedTeam, setSelectedTeam] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (selectedLeague) {\n      const fetchTeams = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n          const endpoint = `http://site.api.espn.com/apis/site/v2/sports/${leagueEndpoints[selectedLeague]}/teams`;\n          const response = await fetch(endpoint);\n          if (!response.ok) {\n            throw new Error('Failed to fetch teams');\n          }\n          const data = await response.json();\n          setTeams(data.sports[0].leagues[0].teams);\n          setSelectedTeam(null);\n        } catch (err) {\n          setError('Error fetching teams. Please try again later.');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchTeams();\n    }\n  }, [selectedLeague]);\n\n  const handleTeamClick = (team) => {\n    setSelectedTeam(team.team);\n  };\n\n  return (\n    <div className=\"team-info\">\n      <h2>Team Info</h2>\n\n      {/* League Dropdown */}\n      <select onChange={(e) => setSelectedLeague(e.target.value)} value={selectedLeague}>\n        <option value=\"\">Select a League</option>\n        {Object.keys(leagueEndpoints).map((league) => (\n          <option key={league} value={league}>{league}</option>\n        ))}\n      </select>\n\n      {/* Error Message */}\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Loading Spinner */}\n      {loading && <div className=\"loading-spinner\">Loading...</div>}\n\n      {/* Team List */}\n      {teams.length > 0 && !loading && (\n        <ul className=\"team-list\">\n          {teams.map((teamData) => (\n            <li key={teamData.team.id} onClick={() => handleTeamClick(teamData)}>\n              {teamData.team.displayName}\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {/* Selected Team Details */}\n      {selectedTeam && (\n        <div className=\"team-details\">\n          <h3>{selectedTeam.displayName}</h3>\n          <img src={selectedTeam.logos?.[0]?.href} alt={selectedTeam.name} style={{ width: '100px' }} />\n          <p><strong>Location:</strong> {selectedTeam.location}</p>\n          <p><strong>Name:</strong> {selectedTeam.name}</p>\n          <p><strong>Abbreviation:</strong> {selectedTeam.abbreviation}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TeamInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}